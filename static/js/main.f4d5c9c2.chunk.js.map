{"version":3,"sources":["firebase.jsx","AuthProvider.js","Login.jsx","VideoCard.jsx","Home.jsx","Profile.jsx","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","storage","provider","GoogleAuthProvider","signInWithGoogle","signInWithPopup","AuthContext","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","unsub","onAuthStateChanged","a","user","displayName","email","uid","photoURL","docRef","collection","doc","get","exists","set","Provider","value","Login","useContext","to","type","className","onClick","VideoCard","props","boxOpen","setBoxOpen","playing","setPlaying","currentUserComment","setCurrentUserComment","allComments","setAllComments","allCommentId","post","comments","arr","i","length","id","commentData","data","push","f","e","currentTarget","pause","play","src","url","username","map","comment","index","pic","onChange","p","add","then","update","Home","posts","setPosts","unsubscription","onSnapshot","querySnapshot","docs","signOut","target","files","name","size","file","split","alert","uploadTask","ref","put","on","snapshot","console","log","bytesTransferred","totalBytes","error","getDownloadURL","like","Profile","totalPosts","setTotalPosts","where","App","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f4d5c9c2.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDOCWnz-ym8-JlbHbn43YnTDQm_gap_DI8\",\r\n    authDomain: \"reels-fdb44.firebaseapp.com\",\r\n    projectId: \"reels-fdb44\",\r\n    storageBucket: \"reels-fdb44.appspot.com\",\r\n    messagingSenderId: \"960511242951\",\r\n    appId: \"1:960511242951:web:ae3fb1159915e313ad44e2\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  export const firestore = firebase.firestore();\r\n  export const auth = firebase.auth();\r\n  export const storage = firebase.storage();\r\n\r\n  let provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n  export const signInWithGoogle = ()=> auth.signInWithPopup(provider);\r\n\r\n  export default firebase;","import { createContext, useState, useEffect } from \"react\";\r\nimport { auth, firestore } from \"./firebase\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nlet AuthProvider = ({ children }) => {\r\n    let [currentUser, setCurrentUser] = useState(null);\r\n    let [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        let unsub = auth.onAuthStateChanged(async (user) => {\r\n            if(user){\r\n                let {displayName, email, uid, photoURL} = user;\r\n\r\n                let docRef = firestore.collection(\"users\").doc(uid);\r\n                let document = await docRef.get();\r\n                if(!document.exists){\r\n                    docRef.set({\r\n                        displayName,\r\n                        email, \r\n                        photoURL\r\n                    });\r\n                }\r\n\r\n                setCurrentUser({displayName, email, uid, photoURL});\r\n            } else{\r\n                setCurrentUser(user);\r\n            }\r\n\r\n            setLoading(false);\r\n        });\r\n\r\n        return () => {\r\n            unsub();\r\n        };\r\n    }, []);\r\n\r\n    //Loading gets faster when user login or logout\r\n    \r\n    return (\r\n        <AuthContext.Provider value={currentUser}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AuthProvider;","import { Redirect } from \"react-router-dom\";\r\nimport { signInWithGoogle } from \"./firebase\";\r\nimport { AuthContext } from \"./AuthProvider\";\r\nimport { useContext } from \"react\";\r\n\r\nlet Login = () => {\r\n  let value = useContext(AuthContext);\r\n\r\n  return (\r\n    <div>\r\n      {value ? <Redirect to=\"/home\" /> : \"\"}\r\n      <button\r\n        type=\"submit\"\r\n        className=\"btn btn-primary m-4\"\r\n        onClick={signInWithGoogle}\r\n      >\r\n        Login in with Google\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { firestore } from \"./firebase\";\r\nimport { AuthContext } from \"./AuthProvider\";\r\n\r\nlet VideoCard = (props) => {\r\n  let [boxOpen, setBoxOpen] = useState(false);\r\n  let [playing, setPlaying] = useState(false);\r\n  let [currentUserComment, setCurrentUserComment] = useState(\"\");\r\n  let [allComments, setAllComments] = useState([]);\r\n\r\n  let value = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    let f = async () => {\r\n      let allCommentId = props.post.comments;\r\n      let arr = [];\r\n\r\n      for (let i = 0; i < allCommentId.length; i++) {\r\n        let id = allCommentId[i];\r\n\r\n        let doc = await firestore.collection(\"comments\").doc(id).get();\r\n        let commentData = { ...doc.data(), id: doc.id };\r\n        arr.push(commentData);\r\n      }\r\n\r\n      setAllComments(arr);\r\n    };\r\n    f();\r\n  }, [props]);\r\n\r\n  return (\r\n    <div className=\"video-card\">\r\n      <video\r\n        onClick={(e) => {\r\n          if (playing) {\r\n            setPlaying(false);\r\n            e.currentTarget.pause();\r\n          } else {\r\n            setPlaying(true);\r\n            e.currentTarget.play();\r\n          }\r\n        }}\r\n        src={props.post.url}\r\n      ></video>\r\n      <span className=\"material-icons-outlined like\">favorite_border</span>\r\n      <span\r\n        className=\"material-icons-outlined comment\"\r\n        onClick={() => {\r\n          if (boxOpen) setBoxOpen(false);\r\n          else setBoxOpen(true);\r\n        }}\r\n      >\r\n        comment\r\n      </span>\r\n      <p className=\"username\">\r\n        <b>{props.post.username}</b>\r\n      </p>\r\n      <p className=\"song\">\r\n        <span className=\"material-icons-outlined\">audiotrack</span>\r\n        <marquee>song name</marquee>\r\n      </p>\r\n      {boxOpen ? (\r\n        <div className=\"comment-box\">\r\n          <button\r\n            className=\"comment-box-close-btn\"\r\n            onClick={() => {\r\n              setBoxOpen(false);\r\n            }}\r\n          >\r\n            Close\r\n          </button>\r\n          <div className=\"all-comments\">\r\n            {allComments.map((comment, index) => {\r\n              return (\r\n                <div key={index}>\r\n                  <img src={comment.pic} />\r\n                  <div>\r\n                    <p>\r\n                      <b>{comment.username}</b>\r\n                    </p>\r\n                    <p className=\"inner-comment\">{comment.comment}</p>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"comment-form\">\r\n            <input\r\n              type=\"text\"\r\n              value={currentUserComment}\r\n              onChange={(e) => {\r\n                setCurrentUserComment(e.currentTarget.value);\r\n              }}\r\n            />\r\n            <button\r\n              onClick={() => {\r\n                let p = firestore.collection(\"comments\").add({\r\n                  comment: currentUserComment,\r\n                  username: value.displayName,\r\n                  pic: value.photoURL,\r\n                });\r\n                setCurrentUserComment(\"\");\r\n                p.then((docRef) => {\r\n                  return docRef.get();\r\n                }).then((doc) => {\r\n                  firestore\r\n                    .collection(\"posts\")\r\n                    .doc(props.post.id)\r\n                    .update({\r\n                      comments: [...props.post.comments, doc.id],\r\n                    });\r\n                });\r\n              }}\r\n            >\r\n              Post\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoCard;\r\n","import { Link, Redirect } from \"react-router-dom\";\r\nimport { auth, firestore, storage } from \"./firebase\";\r\nimport { AuthContext } from \"./AuthProvider\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport \"./Home.css\";\r\nimport VideoCard from \"./VideoCard\";\r\n\r\nlet Home = () => {\r\n  let value = useContext(AuthContext);\r\n\r\n  let [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let unsubscription = firestore\r\n      .collection(\"posts\")\r\n      .onSnapshot((querySnapshot) => {\r\n        setPosts(\r\n          querySnapshot.docs.map((doc) => {\r\n            return { ...doc.data(), id: doc.id };\r\n          })\r\n        );\r\n      });\r\n    //unsub from listening to changes on posts collection when home component is unmounted\r\n    return () => {\r\n      unsubscription();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {value ? (\r\n        <>\r\n          <div className=\"posts-container\">\r\n            {posts.map((post, index) => {\r\n              return <VideoCard key={index} post={post} />;\r\n            })}\r\n          </div>\r\n          <button\r\n            className=\"logout-btn\"\r\n            onClick={() => {\r\n              auth.signOut();\r\n            }}\r\n          >\r\n            Logout\r\n          </button>\r\n          <Link to=\"/profile\">\r\n            <button id=\"profile\">Profile</button>\r\n          </Link>\r\n          <input\r\n            // //whenever click on input file tag set its value to null so that even if we select same file the tag will feel we have done some changes and it will call onChange\r\n            // onClick={(e) => {\r\n            //   e.target.value = null;\r\n            // }}\r\n            onClick={(e) => {\r\n              e.target.value = null;\r\n            }}\r\n            onChange={(e) => {\r\n              if (!e.target.files[0]) return;\r\n\r\n              //get file name size and type\r\n              let { name, size, type } = e.target.files[0];\r\n              //store the selected file so that we can upload it later on\r\n              let file = e.target.files[0];\r\n\r\n              //convert the file size into mb\r\n              size = size / 1000000;\r\n              //get file type\r\n              type = type.split(\"/\")[0];\r\n\r\n              //checks\r\n              if (type != \"video\") {\r\n                alert(\"Please upload a video\");\r\n                return;\r\n              }\r\n\r\n              if (size > 10) {\r\n                alert(\"File is too big!\");\r\n                return;\r\n              }\r\n              //f1 function passed to state_changed event for upload progress\r\n              let f1 = (snapshot) => {\r\n                console.log(snapshot.bytesTransferred);\r\n                console.log(snapshot.totalBytes);\r\n              };\r\n\r\n              //f2 function passed to state_changed event for error handling\r\n              let f2 = (error) => {\r\n                console.log(error);\r\n              };\r\n\r\n              //f3 function passed to state_changed event which executes when file is uploaded\r\n              //so that we can get the uploaded file url\r\n              let f3 = () => {\r\n                //getDownloadURL method is used to generate the url, it gives a promise\r\n                let p = uploadTask.snapshot.ref.getDownloadURL();\r\n                p.then((url) => {\r\n                  firestore.collection(\"posts\").add({\r\n                    username: value.displayName,\r\n                    url,\r\n                    like: 0,\r\n                    comments: [],\r\n                  });\r\n                });\r\n              };\r\n\r\n              let uploadTask = storage\r\n                .ref(`/posts/${value.uid}/${name}`)\r\n                .put(file);\r\n\r\n              uploadTask.on(\"state_changed\", f1, f2, f3);\r\n            }}\r\n            //upload\r\n            className=\"upload-btn\"\r\n            type=\"file\"\r\n          />\r\n          Upload\r\n        </>\r\n      ) : (\r\n        <Redirect to=\"/\" />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"./AuthProvider\";\r\nimport { firestore } from \"./firebase\";\r\n\r\nimport \"./Profile.css\";\r\n\r\nlet Profile = () => {\r\n  let value = useContext(AuthContext);\r\n  let [totalPosts, setTotalPosts] = useState(0);\r\n\r\n  console.log(value);\r\n\r\n  useEffect(() => {\r\n    let f = async () => {\r\n      let querySnapshot = await firestore\r\n        .collection(\"posts\")\r\n        .where(\"username\", \"==\", value.displayName)\r\n        .get();\r\n\r\n      setTotalPosts(querySnapshot.size);\r\n    };\r\n    f();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {value ? (\r\n        <div>\r\n          <img src={value.photoURL} />\r\n          <p className=\"username-profile\">{value.displayName}</p>\r\n          <p className=\"ttpost\">Total Posts: {totalPosts}</p>\r\n        </div>\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import Login from \"./Login\";\nimport Home from \"./Home\";\nimport Profile from \"./Profile\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AuthProvider from \"./AuthProvider\";\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <AuthProvider>\n          <Switch>\n            <Route path=\"/home\">\n              <Home />\n            </Route>\n            <Route path=\"/profile\">\n              <Profile/>\n              </Route>\n              <Route path=\"/\">\n              <Login />\n            </Route>\n          </Switch>\n        </AuthProvider>\n      </Router>\n    </>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}